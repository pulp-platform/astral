
// File auto-generated by Padrick unknown
package pkg_internal_carfield_padframe_behav_periph;
  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_host_00_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_host_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_host_01_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_host_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_host_02_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_host_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_host_03_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_host_03_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_host_04_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_host_04_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_host_05_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_host_05_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_host_06_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_host_06_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_host_07_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_host_07_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_host_08_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_host_08_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_host_09_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_host_09_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_host_10_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_host_10_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_secure_00_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_secure_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_secure_01_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_secure_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_secure_02_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_secure_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_secure_03_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_secure_03_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_secure_04_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_secure_04_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_secure_05_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_secure_05_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_secure_06_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_secure_06_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_secure_07_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_secure_07_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_gpio_00_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_gpio_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_gpio_01_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_gpio_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_gpio_02_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_gpio_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_gpio_03_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_gpio_03_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_gpio_04_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_gpio_04_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_gpio_05_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_gpio_05_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_gpio_06_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_gpio_06_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_gpio_07_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_gpio_07_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_gpio_08_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_gpio_08_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_gpio_09_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_gpio_09_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_gpio_10_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_gpio_10_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_gpio_11_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_gpio_11_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_gpio_12_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_gpio_12_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_gpio_13_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_gpio_13_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_gpio_14_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_gpio_14_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_gpio_15_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_gpio_15_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_periph_00_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_periph_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_periph_01_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_periph_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_periph_02_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_periph_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_periph_03_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_periph_03_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_periph_04_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_periph_04_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_periph_05_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_periph_05_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_periph_06_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_periph_06_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_periph_07_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_periph_07_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_periph_08_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_periph_08_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_periph_09_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_periph_09_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_periph_10_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_periph_10_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_periph_11_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_periph_11_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_periph_12_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_periph_12_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_periph_13_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_periph_13_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_periph_14_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_periph_14_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_periph_15_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_periph_15_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_periph_16_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_periph_16_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_debug_out0_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_debug_out0_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_debug_out1_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_debug_out1_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_debug_out2_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_debug_out2_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_debug_out3_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_debug_out3_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_debug_out4_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_debug_out4_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_jtag_pll_00_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_jtag_pll_00_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_jtag_pll_01_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_jtag_pll_01_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_jtag_pll_02_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_jtag_pll_02_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_jtag_pll_03_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_jtag_pll_03_t;

  typedef struct packed{
    logic  chip2pad;
    logic  drv0;
    logic  drv1;
    logic  drv2;
    logic  pde;
    logic  pp_odrain_selector;
    logic  pudis;
    logic  rxdis;
    logic  slw_pgm;
    logic  trie;
  } mux_to_pad_jtag_pll_04_t;

  typedef struct packed{
    logic  pad2chip;
    logic  pad2chip_hv;
  } pad_to_mux_jtag_pll_04_t;

  typedef struct packed{
    mux_to_pad_host_00_t host_00;
    mux_to_pad_host_01_t host_01;
    mux_to_pad_host_02_t host_02;
    mux_to_pad_host_03_t host_03;
    mux_to_pad_host_04_t host_04;
    mux_to_pad_host_05_t host_05;
    mux_to_pad_host_06_t host_06;
    mux_to_pad_host_07_t host_07;
    mux_to_pad_host_08_t host_08;
    mux_to_pad_host_09_t host_09;
    mux_to_pad_host_10_t host_10;
    mux_to_pad_secure_00_t secure_00;
    mux_to_pad_secure_01_t secure_01;
    mux_to_pad_secure_02_t secure_02;
    mux_to_pad_secure_03_t secure_03;
    mux_to_pad_secure_04_t secure_04;
    mux_to_pad_secure_05_t secure_05;
    mux_to_pad_secure_06_t secure_06;
    mux_to_pad_secure_07_t secure_07;
    mux_to_pad_gpio_00_t gpio_00;
    mux_to_pad_gpio_01_t gpio_01;
    mux_to_pad_gpio_02_t gpio_02;
    mux_to_pad_gpio_03_t gpio_03;
    mux_to_pad_gpio_04_t gpio_04;
    mux_to_pad_gpio_05_t gpio_05;
    mux_to_pad_gpio_06_t gpio_06;
    mux_to_pad_gpio_07_t gpio_07;
    mux_to_pad_gpio_08_t gpio_08;
    mux_to_pad_gpio_09_t gpio_09;
    mux_to_pad_gpio_10_t gpio_10;
    mux_to_pad_gpio_11_t gpio_11;
    mux_to_pad_gpio_12_t gpio_12;
    mux_to_pad_gpio_13_t gpio_13;
    mux_to_pad_gpio_14_t gpio_14;
    mux_to_pad_gpio_15_t gpio_15;
    mux_to_pad_periph_00_t periph_00;
    mux_to_pad_periph_01_t periph_01;
    mux_to_pad_periph_02_t periph_02;
    mux_to_pad_periph_03_t periph_03;
    mux_to_pad_periph_04_t periph_04;
    mux_to_pad_periph_05_t periph_05;
    mux_to_pad_periph_06_t periph_06;
    mux_to_pad_periph_07_t periph_07;
    mux_to_pad_periph_08_t periph_08;
    mux_to_pad_periph_09_t periph_09;
    mux_to_pad_periph_10_t periph_10;
    mux_to_pad_periph_11_t periph_11;
    mux_to_pad_periph_12_t periph_12;
    mux_to_pad_periph_13_t periph_13;
    mux_to_pad_periph_14_t periph_14;
    mux_to_pad_periph_15_t periph_15;
    mux_to_pad_periph_16_t periph_16;
    mux_to_pad_debug_out0_t debug_out0;
    mux_to_pad_debug_out1_t debug_out1;
    mux_to_pad_debug_out2_t debug_out2;
    mux_to_pad_debug_out3_t debug_out3;
    mux_to_pad_debug_out4_t debug_out4;
    mux_to_pad_jtag_pll_00_t jtag_pll_00;
    mux_to_pad_jtag_pll_01_t jtag_pll_01;
    mux_to_pad_jtag_pll_02_t jtag_pll_02;
    mux_to_pad_jtag_pll_03_t jtag_pll_03;
    mux_to_pad_jtag_pll_04_t jtag_pll_04;
  } mux_to_pads_t;

  typedef struct packed{
    pad_to_mux_host_00_t host_00;
    pad_to_mux_host_01_t host_01;
    pad_to_mux_host_02_t host_02;
    pad_to_mux_host_03_t host_03;
    pad_to_mux_host_04_t host_04;
    pad_to_mux_host_05_t host_05;
    pad_to_mux_host_06_t host_06;
    pad_to_mux_host_07_t host_07;
    pad_to_mux_host_08_t host_08;
    pad_to_mux_host_09_t host_09;
    pad_to_mux_host_10_t host_10;
    pad_to_mux_secure_00_t secure_00;
    pad_to_mux_secure_01_t secure_01;
    pad_to_mux_secure_02_t secure_02;
    pad_to_mux_secure_03_t secure_03;
    pad_to_mux_secure_04_t secure_04;
    pad_to_mux_secure_05_t secure_05;
    pad_to_mux_secure_06_t secure_06;
    pad_to_mux_secure_07_t secure_07;
    pad_to_mux_gpio_00_t gpio_00;
    pad_to_mux_gpio_01_t gpio_01;
    pad_to_mux_gpio_02_t gpio_02;
    pad_to_mux_gpio_03_t gpio_03;
    pad_to_mux_gpio_04_t gpio_04;
    pad_to_mux_gpio_05_t gpio_05;
    pad_to_mux_gpio_06_t gpio_06;
    pad_to_mux_gpio_07_t gpio_07;
    pad_to_mux_gpio_08_t gpio_08;
    pad_to_mux_gpio_09_t gpio_09;
    pad_to_mux_gpio_10_t gpio_10;
    pad_to_mux_gpio_11_t gpio_11;
    pad_to_mux_gpio_12_t gpio_12;
    pad_to_mux_gpio_13_t gpio_13;
    pad_to_mux_gpio_14_t gpio_14;
    pad_to_mux_gpio_15_t gpio_15;
    pad_to_mux_periph_00_t periph_00;
    pad_to_mux_periph_01_t periph_01;
    pad_to_mux_periph_02_t periph_02;
    pad_to_mux_periph_03_t periph_03;
    pad_to_mux_periph_04_t periph_04;
    pad_to_mux_periph_05_t periph_05;
    pad_to_mux_periph_06_t periph_06;
    pad_to_mux_periph_07_t periph_07;
    pad_to_mux_periph_08_t periph_08;
    pad_to_mux_periph_09_t periph_09;
    pad_to_mux_periph_10_t periph_10;
    pad_to_mux_periph_11_t periph_11;
    pad_to_mux_periph_12_t periph_12;
    pad_to_mux_periph_13_t periph_13;
    pad_to_mux_periph_14_t periph_14;
    pad_to_mux_periph_15_t periph_15;
    pad_to_mux_periph_16_t periph_16;
    pad_to_mux_debug_out0_t debug_out0;
    pad_to_mux_debug_out1_t debug_out1;
    pad_to_mux_debug_out2_t debug_out2;
    pad_to_mux_debug_out3_t debug_out3;
    pad_to_mux_debug_out4_t debug_out4;
    pad_to_mux_jtag_pll_00_t jtag_pll_00;
    pad_to_mux_jtag_pll_01_t jtag_pll_01;
    pad_to_mux_jtag_pll_02_t jtag_pll_02;
    pad_to_mux_jtag_pll_03_t jtag_pll_03;
    pad_to_mux_jtag_pll_04_t jtag_pll_04;
  } pads_to_mux_t;



  // Indices definitions

  parameter PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_WIDTH = 5;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_DEFAULT = 5'd0;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_ALT_CLK = 5'd1;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_ALT_PLL = 5'd2;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_HOST_CLK = 5'd3;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_HOST_PLL = 5'd4;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_HOST_POR_N = 5'd5;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_CLK = 5'd6;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_DOMAIN_CLK = 5'd7;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_DOMAIN_RSTN = 5'd8;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_PLL = 5'd9;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PULP_CLUSTER_DOMAIN_CLK = 5'd10;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PULP_CLUSTER_DOMAIN_RSTN = 5'd11;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SAFETY_ISLAND_DOMAIN_CLK = 5'd12;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SAFETY_ISLAND_DOMAIN_RSTN = 5'd13;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SECURITY_ISLAND_DOMAIN_CLK = 5'd14;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SECURITY_ISLAND_DOMAIN_RSTN = 5'd15;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SPATZ_CLUSTER_DOMAIN_CLK = 5'd16;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT0_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SPATZ_CLUSTER_DOMAIN_RSTN = 5'd17;

  parameter PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_WIDTH = 5;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_DEFAULT = 5'd0;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_ALT_CLK = 5'd1;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_ALT_PLL = 5'd2;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_HOST_CLK = 5'd3;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_HOST_PLL = 5'd4;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_HOST_POR_N = 5'd5;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_CLK = 5'd6;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_DOMAIN_CLK = 5'd7;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_DOMAIN_RSTN = 5'd8;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_PLL = 5'd9;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PULP_CLUSTER_DOMAIN_CLK = 5'd10;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PULP_CLUSTER_DOMAIN_RSTN = 5'd11;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SAFETY_ISLAND_DOMAIN_CLK = 5'd12;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SAFETY_ISLAND_DOMAIN_RSTN = 5'd13;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SECURITY_ISLAND_DOMAIN_CLK = 5'd14;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SECURITY_ISLAND_DOMAIN_RSTN = 5'd15;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SPATZ_CLUSTER_DOMAIN_CLK = 5'd16;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT1_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SPATZ_CLUSTER_DOMAIN_RSTN = 5'd17;

  parameter PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_WIDTH = 5;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_DEFAULT = 5'd0;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_ALT_CLK = 5'd1;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_ALT_PLL = 5'd2;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_HOST_CLK = 5'd3;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_HOST_PLL = 5'd4;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_HOST_POR_N = 5'd5;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_CLK = 5'd6;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_DOMAIN_CLK = 5'd7;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_DOMAIN_RSTN = 5'd8;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_PLL = 5'd9;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PULP_CLUSTER_DOMAIN_CLK = 5'd10;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PULP_CLUSTER_DOMAIN_RSTN = 5'd11;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SAFETY_ISLAND_DOMAIN_CLK = 5'd12;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SAFETY_ISLAND_DOMAIN_RSTN = 5'd13;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SECURITY_ISLAND_DOMAIN_CLK = 5'd14;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SECURITY_ISLAND_DOMAIN_RSTN = 5'd15;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SPATZ_CLUSTER_DOMAIN_CLK = 5'd16;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT2_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SPATZ_CLUSTER_DOMAIN_RSTN = 5'd17;

  parameter PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_WIDTH = 5;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_DEFAULT = 5'd0;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_ALT_CLK = 5'd1;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_ALT_PLL = 5'd2;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_HOST_CLK = 5'd3;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_HOST_PLL = 5'd4;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_HOST_POR_N = 5'd5;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_CLK = 5'd6;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_DOMAIN_CLK = 5'd7;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_DOMAIN_RSTN = 5'd8;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_PLL = 5'd9;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PULP_CLUSTER_DOMAIN_CLK = 5'd10;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PULP_CLUSTER_DOMAIN_RSTN = 5'd11;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SAFETY_ISLAND_DOMAIN_CLK = 5'd12;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SAFETY_ISLAND_DOMAIN_RSTN = 5'd13;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SECURITY_ISLAND_DOMAIN_CLK = 5'd14;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SECURITY_ISLAND_DOMAIN_RSTN = 5'd15;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SPATZ_CLUSTER_DOMAIN_CLK = 5'd16;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT3_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SPATZ_CLUSTER_DOMAIN_RSTN = 5'd17;

  parameter PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_WIDTH = 5;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_DEFAULT = 5'd0;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_ALT_CLK = 5'd1;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_ALT_PLL = 5'd2;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_HOST_CLK = 5'd3;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_HOST_PLL = 5'd4;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_HOST_POR_N = 5'd5;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_CLK = 5'd6;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_DOMAIN_CLK = 5'd7;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_DOMAIN_RSTN = 5'd8;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PERIPH_PLL = 5'd9;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PULP_CLUSTER_DOMAIN_CLK = 5'd10;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_PULP_CLUSTER_DOMAIN_RSTN = 5'd11;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SAFETY_ISLAND_DOMAIN_CLK = 5'd12;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SAFETY_ISLAND_DOMAIN_RSTN = 5'd13;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SECURITY_ISLAND_DOMAIN_CLK = 5'd14;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SECURITY_ISLAND_DOMAIN_RSTN = 5'd15;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SPATZ_CLUSTER_DOMAIN_CLK = 5'd16;
  parameter logic[4:0] PAD_MUX_GROUP_DEBUG_OUT4_DEBUG_SIGNALS_SEL_DEBUG_SIGNALS_SPATZ_CLUSTER_DOMAIN_RSTN = 5'd17;

  parameter PAD_MUX_GROUP_GPIO_00_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_00_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_00_SEL_GPIO_GPIO00 = 1'd1;

  parameter PAD_MUX_GROUP_GPIO_01_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_01_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_01_SEL_GPIO_GPIO01 = 1'd1;

  parameter PAD_MUX_GROUP_GPIO_02_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_02_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_02_SEL_GPIO_GPIO02 = 1'd1;

  parameter PAD_MUX_GROUP_GPIO_03_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_03_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_03_SEL_GPIO_GPIO03 = 1'd1;

  parameter PAD_MUX_GROUP_GPIO_04_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_04_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_04_SEL_GPIO_GPIO04 = 1'd1;

  parameter PAD_MUX_GROUP_GPIO_05_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_05_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_05_SEL_GPIO_GPIO05 = 1'd1;

  parameter PAD_MUX_GROUP_GPIO_06_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_06_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_06_SEL_GPIO_GPIO06 = 1'd1;

  parameter PAD_MUX_GROUP_GPIO_07_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_07_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_07_SEL_GPIO_GPIO07 = 1'd1;

  parameter PAD_MUX_GROUP_GPIO_08_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_08_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_08_SEL_GPIO_GPIO08 = 1'd1;

  parameter PAD_MUX_GROUP_GPIO_09_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_09_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_09_SEL_GPIO_GPIO09 = 1'd1;

  parameter PAD_MUX_GROUP_GPIO_10_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_10_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_10_SEL_GPIO_GPIO10 = 1'd1;

  parameter PAD_MUX_GROUP_GPIO_11_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_11_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_11_SEL_GPIO_GPIO11 = 1'd1;

  parameter PAD_MUX_GROUP_GPIO_12_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_12_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_12_SEL_GPIO_GPIO12 = 1'd1;

  parameter PAD_MUX_GROUP_GPIO_13_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_13_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_13_SEL_GPIO_GPIO13 = 1'd1;

  parameter PAD_MUX_GROUP_GPIO_14_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_14_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_14_SEL_GPIO_GPIO14 = 1'd1;

  parameter PAD_MUX_GROUP_GPIO_15_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_15_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_GPIO_15_SEL_GPIO_GPIO15 = 1'd1;

  parameter PAD_MUX_GROUP_HOST_00_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_00_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_00_SEL_UART0_HOST_RX = 1'd1;

  parameter PAD_MUX_GROUP_HOST_01_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_01_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_01_SEL_UART0_HOST_TX = 1'd1;

  parameter PAD_MUX_GROUP_HOST_02_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_02_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_02_SEL_QSPI0_HOST_SDIO0 = 1'd1;

  parameter PAD_MUX_GROUP_HOST_03_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_03_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_03_SEL_QSPI0_HOST_SDIO1 = 1'd1;

  parameter PAD_MUX_GROUP_HOST_04_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_04_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_04_SEL_QSPI0_HOST_SDIO2 = 1'd1;

  parameter PAD_MUX_GROUP_HOST_05_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_05_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_05_SEL_QSPI0_HOST_SDIO3 = 1'd1;

  parameter PAD_MUX_GROUP_HOST_06_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_06_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_06_SEL_QSPI0_HOST_SCK = 1'd1;

  parameter PAD_MUX_GROUP_HOST_07_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_07_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_07_SEL_QSPI0_HOST_CSN0 = 1'd1;

  parameter PAD_MUX_GROUP_HOST_08_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_08_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_08_SEL_QSPI0_HOST_CSN1 = 1'd1;

  parameter PAD_MUX_GROUP_HOST_09_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_09_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_09_SEL_I2C0_HOST_SDA = 1'd1;

  parameter PAD_MUX_GROUP_HOST_10_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_10_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_HOST_10_SEL_I2C0_HOST_SCL = 1'd1;

  parameter PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_00_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_00_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_00_SEL_JTAG_PLL0_TCK = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_00_SEL_JTAG_PLL1_TCK = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_00_SEL_JTAG_PLL2_TCK = 2'd3;

  parameter PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_01_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_01_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_01_SEL_JTAG_PLL0_TMS = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_01_SEL_JTAG_PLL1_TMS = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_01_SEL_JTAG_PLL2_TMS = 2'd3;

  parameter PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_02_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_02_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_02_SEL_JTAG_PLL0_TDI = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_02_SEL_JTAG_PLL1_TDI = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_02_SEL_JTAG_PLL2_TDI = 2'd3;

  parameter PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_03_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_03_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_03_SEL_JTAG_PLL0_TRSTN = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_03_SEL_JTAG_PLL1_TRSTN = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_03_SEL_JTAG_PLL2_TRSTN = 2'd3;

  parameter PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_04_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_04_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_04_SEL_JTAG_PLL0_TDO = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_04_SEL_JTAG_PLL1_TDO = 2'd2;
  parameter logic[1:0] PAD_MUX_GROUP_JTAG_PLL_JTAG_PLL_04_SEL_JTAG_PLL2_TDO = 2'd3;

  parameter PAD_MUX_GROUP_PERIPH_00_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_00_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_00_SEL_CAN0_TX = 1'd1;

  parameter PAD_MUX_GROUP_PERIPH_01_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_01_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_01_SEL_CAN0_RX = 1'd1;

  parameter PAD_MUX_GROUP_PERIPH_02_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_02_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_02_SEL_ETHERNET_ETH_RST = 1'd1;

  parameter PAD_MUX_GROUP_PERIPH_03_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_03_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_03_SEL_ETHERNET_ETH_TXCK = 1'd1;

  parameter PAD_MUX_GROUP_PERIPH_04_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_04_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_04_SEL_ETHERNET_ETH_TXCTL = 1'd1;

  parameter PAD_MUX_GROUP_PERIPH_05_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_05_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_05_SEL_ETHERNET_ETH_TXD0 = 1'd1;

  parameter PAD_MUX_GROUP_PERIPH_06_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_06_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_06_SEL_ETHERNET_ETH_TXD1 = 1'd1;

  parameter PAD_MUX_GROUP_PERIPH_07_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_07_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_07_SEL_ETHERNET_ETH_TXD2 = 1'd1;

  parameter PAD_MUX_GROUP_PERIPH_08_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_08_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_08_SEL_ETHERNET_ETH_TXD3 = 1'd1;

  parameter PAD_MUX_GROUP_PERIPH_09_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_09_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_09_SEL_ETHERNET_ETH_MDC = 1'd1;

  parameter PAD_MUX_GROUP_PERIPH_10_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_10_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_10_SEL_ETHERNET_ETH_MDIO = 1'd1;

  parameter PAD_MUX_GROUP_PERIPH_11_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_11_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_11_SEL_ETHERNET_ETH_RXCK = 1'd1;

  parameter PAD_MUX_GROUP_PERIPH_12_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_12_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_12_SEL_ETHERNET_ETH_RXCTL = 1'd1;

  parameter PAD_MUX_GROUP_PERIPH_13_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_13_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_13_SEL_ETHERNET_ETH_RXD0 = 1'd1;

  parameter PAD_MUX_GROUP_PERIPH_14_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_14_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_14_SEL_ETHERNET_ETH_RXD1 = 1'd1;

  parameter PAD_MUX_GROUP_PERIPH_15_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_15_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_15_SEL_ETHERNET_ETH_RXD2 = 1'd1;

  parameter PAD_MUX_GROUP_PERIPH_16_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_16_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PERIPH_16_SEL_ETHERNET_ETH_RXD3 = 1'd1;

  parameter PAD_MUX_GROUP_SECURE_00_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_SECURE_00_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_SECURE_00_SEL_QSPI0_SEC_ISLN_SDIO0 = 1'd1;

  parameter PAD_MUX_GROUP_SECURE_01_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_SECURE_01_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_SECURE_01_SEL_QSPI0_SEC_ISLN_SDIO1 = 1'd1;

  parameter PAD_MUX_GROUP_SECURE_02_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_SECURE_02_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_SECURE_02_SEL_QSPI0_SEC_ISLN_SDIO2 = 1'd1;

  parameter PAD_MUX_GROUP_SECURE_03_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_SECURE_03_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_SECURE_03_SEL_QSPI0_SEC_ISLN_SDIO3 = 1'd1;

  parameter PAD_MUX_GROUP_SECURE_04_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_SECURE_04_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_SECURE_04_SEL_QSPI0_SEC_ISLN_SCK = 1'd1;

  parameter PAD_MUX_GROUP_SECURE_05_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_SECURE_05_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_SECURE_05_SEL_QSPI0_SEC_ISLN_CSN0 = 1'd1;

  parameter PAD_MUX_GROUP_SECURE_06_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_SECURE_06_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_SECURE_06_SEL_UART1_SEC_ISLN_RX = 1'd1;

  parameter PAD_MUX_GROUP_SECURE_07_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_SECURE_07_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_SECURE_07_SEL_UART1_SEC_ISLN_TX = 1'd1;

  // Dynamic Pad  instance index

  parameter PORT_MUX_GROUP_DEBUG_SIGNALS_SEL_WIDTH = 3;
  parameter logic[2:0] PORT_MUX_GROUP_DEBUG_SIGNALS_SEL_DEBUG_OUT0 = 3'd0;
  parameter logic[2:0] PORT_MUX_GROUP_DEBUG_SIGNALS_SEL_DEBUG_OUT1 = 3'd1;
  parameter logic[2:0] PORT_MUX_GROUP_DEBUG_SIGNALS_SEL_DEBUG_OUT2 = 3'd2;
  parameter logic[2:0] PORT_MUX_GROUP_DEBUG_SIGNALS_SEL_DEBUG_OUT3 = 3'd3;
  parameter logic[2:0] PORT_MUX_GROUP_DEBUG_SIGNALS_SEL_DEBUG_OUT4 = 3'd4;

  parameter PORT_MUX_GROUP_GPIO_00_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_GPIO_00_SEL_GPIO_00 = 1'd0;

  parameter PORT_MUX_GROUP_GPIO_01_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_GPIO_01_SEL_GPIO_01 = 1'd0;

  parameter PORT_MUX_GROUP_GPIO_02_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_GPIO_02_SEL_GPIO_02 = 1'd0;

  parameter PORT_MUX_GROUP_GPIO_03_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_GPIO_03_SEL_GPIO_03 = 1'd0;

  parameter PORT_MUX_GROUP_GPIO_04_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_GPIO_04_SEL_GPIO_04 = 1'd0;

  parameter PORT_MUX_GROUP_GPIO_05_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_GPIO_05_SEL_GPIO_05 = 1'd0;

  parameter PORT_MUX_GROUP_GPIO_06_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_GPIO_06_SEL_GPIO_06 = 1'd0;

  parameter PORT_MUX_GROUP_GPIO_07_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_GPIO_07_SEL_GPIO_07 = 1'd0;

  parameter PORT_MUX_GROUP_GPIO_08_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_GPIO_08_SEL_GPIO_08 = 1'd0;

  parameter PORT_MUX_GROUP_GPIO_09_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_GPIO_09_SEL_GPIO_09 = 1'd0;

  parameter PORT_MUX_GROUP_GPIO_10_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_GPIO_10_SEL_GPIO_10 = 1'd0;

  parameter PORT_MUX_GROUP_GPIO_11_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_GPIO_11_SEL_GPIO_11 = 1'd0;

  parameter PORT_MUX_GROUP_GPIO_12_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_GPIO_12_SEL_GPIO_12 = 1'd0;

  parameter PORT_MUX_GROUP_GPIO_13_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_GPIO_13_SEL_GPIO_13 = 1'd0;

  parameter PORT_MUX_GROUP_GPIO_14_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_GPIO_14_SEL_GPIO_14 = 1'd0;

  parameter PORT_MUX_GROUP_GPIO_15_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_GPIO_15_SEL_GPIO_15 = 1'd0;

  parameter PORT_MUX_GROUP_HOST_00_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_HOST_00_SEL_HOST_00 = 1'd0;

  parameter PORT_MUX_GROUP_HOST_01_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_HOST_01_SEL_HOST_01 = 1'd0;

  parameter PORT_MUX_GROUP_HOST_02_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_HOST_02_SEL_HOST_02 = 1'd0;

  parameter PORT_MUX_GROUP_HOST_03_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_HOST_03_SEL_HOST_03 = 1'd0;

  parameter PORT_MUX_GROUP_HOST_04_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_HOST_04_SEL_HOST_04 = 1'd0;

  parameter PORT_MUX_GROUP_HOST_05_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_HOST_05_SEL_HOST_05 = 1'd0;

  parameter PORT_MUX_GROUP_HOST_06_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_HOST_06_SEL_HOST_06 = 1'd0;

  parameter PORT_MUX_GROUP_HOST_07_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_HOST_07_SEL_HOST_07 = 1'd0;

  parameter PORT_MUX_GROUP_HOST_08_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_HOST_08_SEL_HOST_08 = 1'd0;

  parameter PORT_MUX_GROUP_HOST_09_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_HOST_09_SEL_HOST_09 = 1'd0;

  parameter PORT_MUX_GROUP_HOST_10_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_HOST_10_SEL_HOST_10 = 1'd0;

  parameter PORT_MUX_GROUP_JTAG_PLL_00_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_JTAG_PLL_00_SEL_JTAG_PLL_00 = 1'd0;

  parameter PORT_MUX_GROUP_JTAG_PLL_01_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_JTAG_PLL_01_SEL_JTAG_PLL_01 = 1'd0;

  parameter PORT_MUX_GROUP_JTAG_PLL_02_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_JTAG_PLL_02_SEL_JTAG_PLL_02 = 1'd0;

  parameter PORT_MUX_GROUP_JTAG_PLL_03_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_JTAG_PLL_03_SEL_JTAG_PLL_03 = 1'd0;

  parameter PORT_MUX_GROUP_JTAG_PLL_04_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_JTAG_PLL_04_SEL_JTAG_PLL_04 = 1'd0;

  parameter PORT_MUX_GROUP_PERIPH_00_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PERIPH_00_SEL_PERIPH_00 = 1'd0;

  parameter PORT_MUX_GROUP_PERIPH_01_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PERIPH_01_SEL_PERIPH_01 = 1'd0;

  parameter PORT_MUX_GROUP_PERIPH_02_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PERIPH_02_SEL_PERIPH_02 = 1'd0;

  parameter PORT_MUX_GROUP_PERIPH_03_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PERIPH_03_SEL_PERIPH_03 = 1'd0;

  parameter PORT_MUX_GROUP_PERIPH_04_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PERIPH_04_SEL_PERIPH_04 = 1'd0;

  parameter PORT_MUX_GROUP_PERIPH_05_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PERIPH_05_SEL_PERIPH_05 = 1'd0;

  parameter PORT_MUX_GROUP_PERIPH_06_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PERIPH_06_SEL_PERIPH_06 = 1'd0;

  parameter PORT_MUX_GROUP_PERIPH_07_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PERIPH_07_SEL_PERIPH_07 = 1'd0;

  parameter PORT_MUX_GROUP_PERIPH_08_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PERIPH_08_SEL_PERIPH_08 = 1'd0;

  parameter PORT_MUX_GROUP_PERIPH_09_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PERIPH_09_SEL_PERIPH_09 = 1'd0;

  parameter PORT_MUX_GROUP_PERIPH_10_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PERIPH_10_SEL_PERIPH_10 = 1'd0;

  parameter PORT_MUX_GROUP_PERIPH_11_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PERIPH_11_SEL_PERIPH_11 = 1'd0;

  parameter PORT_MUX_GROUP_PERIPH_12_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PERIPH_12_SEL_PERIPH_12 = 1'd0;

  parameter PORT_MUX_GROUP_PERIPH_13_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PERIPH_13_SEL_PERIPH_13 = 1'd0;

  parameter PORT_MUX_GROUP_PERIPH_14_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PERIPH_14_SEL_PERIPH_14 = 1'd0;

  parameter PORT_MUX_GROUP_PERIPH_15_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PERIPH_15_SEL_PERIPH_15 = 1'd0;

  parameter PORT_MUX_GROUP_PERIPH_16_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PERIPH_16_SEL_PERIPH_16 = 1'd0;

  parameter PORT_MUX_GROUP_SECURE_00_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_SECURE_00_SEL_SECURE_00 = 1'd0;

  parameter PORT_MUX_GROUP_SECURE_01_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_SECURE_01_SEL_SECURE_01 = 1'd0;

  parameter PORT_MUX_GROUP_SECURE_02_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_SECURE_02_SEL_SECURE_02 = 1'd0;

  parameter PORT_MUX_GROUP_SECURE_03_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_SECURE_03_SEL_SECURE_03 = 1'd0;

  parameter PORT_MUX_GROUP_SECURE_04_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_SECURE_04_SEL_SECURE_04 = 1'd0;

  parameter PORT_MUX_GROUP_SECURE_05_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_SECURE_05_SEL_SECURE_05 = 1'd0;

  parameter PORT_MUX_GROUP_SECURE_06_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_SECURE_06_SEL_SECURE_06 = 1'd0;

  parameter PORT_MUX_GROUP_SECURE_07_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_SECURE_07_SEL_SECURE_07 = 1'd0;
endpackage : pkg_internal_carfield_padframe_behav_periph
